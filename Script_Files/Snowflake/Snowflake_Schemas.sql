SNOW_RETAIL_DB.SNOW_RETAIL_SCHEMA.RETAIL_STAGE

-- create database

DROP DATABASE IF EXISTS SNOW_RETAIL_DB;
CREATE DATABASE SNOW_RETAIL_DB;

USE DATABASE SNOW_RETAIL_DB;

-- create database schema
DROP SCHEMA IF EXISTS SNOW_RETAIL_DB.SNOW_RETAIL_SCHEMA;
CREATE SCHEMA SNOW_RETAIL_DB.SNOW_RETAIL_SCHEMA;

-- create tables

-- Dimension Date Table
CREATE OR REPLACE TABLE DIM_DATE(
    DATE_ID INT PRIMARY KEY,
    DATE DATE,
    DAY_OF_WEEK VARCHAR(50),
    MONTH VARCHAR(20),
    QUARTER INT,
    YEAR INT, 
    ISWEEKEND BOOLEAN
);
       
-- Dimension Loyalty Info Table
CREATE OR REPLACE TABLE DIM_LOYALTY_INFO(
    LOYALTY_PROGRAM_ID INT PRIMARY KEY,
    PROGRAM_NAME VARCHAR(100),
    PROGRAM_TIER VARCHAR(100),
    POINTS_ACCURED INT
);

-- Dimension Customer Table
CREATE OR REPLACE TABLE DIM_CUSTOMER(
    CUSTOMER_ID INT PRIMARY KEY AUTOINCREMENT START 1 INCREMENT 1,
    FIRST_NAME VARCHAR(100),
    LAST_NAME VARCHAR(100),
    GENDER VARCHAR(100),
    DOB DATE,
    EMAIL VARCHAR(100),
    PHONE_NUMBER VARCHAR(100),
    ADDRESS VARCHAR(500),
    CITY VARCHAR(100),
    STATE VARCHAR(100),
    ZIPCODE VARCHAR(100),
    COUNTRY VARCHAR(200),
    LOYALTY_PROGRAM_ID INT,
    FOREIGN KEY (LOYALTY_PROGRAM_ID) REFERENCES DIM_LOYALTY_INFO(LOYALTY_PROGRAM_ID)
);

-- Dimension Store Table
CREATE OR REPLACE TABLE DIM_STORE(
    STORE_ID INT PRIMARY KEY AUTOINCREMENT START 1 INCREMENT 1,
    STORE_NAME VARCHAR(200),
    STORE_TYPE VARCHAR(100),
    STORE_OPENING_DATE DATE,
    ADDRESS VARCHAR(500),
    CITY VARCHAR(200),
    STATE VARCHAR(200),
    COUNTRY VARCHAR(100),
    REGION VARCHAR(200),
    MANAGER_NAME VARCHAR(100)
);

-- Dimension Product Table
CREATE OR REPLACE TABLE DIM_PRODUCT(
    PRODUCT_ID INT PRIMARY KEY AUTOINCREMENT START 1 INCREMENT 1,
    PRODUCT_NAME VARCHAR(100),
    CATEGORY VARCHAR(100),
    BRAND VARCHAR(100),
    UNIT_PRICE DECIMAL(10, 2)
);

-- Fact Sales Table
CREATE OR REPLACE TABLE FACT_ORDERS(
    ORDER_ID INT PRIMARY KEY AUTOINCREMENT START 1 INCREMENT 1,
    CUSTOMER_ID INT,
    STORE_ID INT,
    ORDER_DATE_ID INT,
    PRODUCT_ID INT,
    QUANTITY_ORDERED DECIMAL(10,2),
    ORDER_AMOUNT DECIMAL(10,2),
    DISCOUNT_AMOUNT DECIMAL(10,2),
    SHIPPING_COST DECIMAL(10,2),
    TOTAL_AMOUNT DECIMAL(10,2),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES DIM_CUSTOMER(CUSTOMER_ID),
    FOREIGN KEY (STORE_ID) REFERENCES DIM_STORE(STORE_ID),
    FOREIGN KEY (ORDER_DATE_ID) REFERENCES DIM_DATE(DATE_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES DIM_PRODUCT(PRODUCT_ID)
);

